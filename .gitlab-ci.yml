stages:
  - backend
  - frontend
  - deploy

backend:
  image: maven:3-jdk-13
  stage: backend
  tags:
    - maven
  variables:
    MYSQL_HOST: "192.168.178.105"
    MAVEN_OPTS: "-Dmaven.repo.local=./.repository"
  script:
    - echo "Building backend."
    - cd webapp_backend
    - mvn verify
    - echo "Building benchmarker."
    - cd ../benchmarker
    - mvn verify
  artifacts:
    expire_in: "1 hour"
    paths:
      - "webapp_backend/target/webapp_backend-0.1.jar"
  # Cache maven deps
  cache:
    key: "backend_cache"
    paths:
      - webapp_backend/.repository/
      - benchmarker/.repository/

deploy:
  stage: deploy
  image: ubuntu
  script: 
    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'which ssh-agent || ( apt update && apt install openssh-client -y )'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    ## Setup host key verification
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    # Normal script
    - cd/deploy.sh
  dependencies:
    - "backend"
  tags:
    - java
  only:
    - master